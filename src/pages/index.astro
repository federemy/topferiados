---
// src/pages/feriados.astro
const LOCALE = "es-AR";
const DEFAULT_YEAR = String(new Date().getFullYear());

// Canonical din√°mico (requiere "site" en astro.config.mjs)
const CANONICAL = Astro.site ? new URL('/feriados', Astro.site).toString() : undefined;

// Meta b√°sicos
const META_TITLE = "üéâ Feriados por pa√≠s | Pr√≥ximo feriado, ranking y comparador mundial";
const META_DESC = "Eleg√≠ un pa√≠s y a√±o para ver feriados nacionales, el pr√≥ximo feriado, cu√°ntos faltan y el ranking por continente y global. Datos en vivo de Nager.Date.";
const OG_IMAGE = "/og/feriados-og.png"; // pon√© tu imagen en public/og/feriados-og.png (1200x630)
---
<head>
  <meta charset="utf-8" />
  <title>{META_TITLE}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content={META_DESC} />
  <meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="theme-color" content="#ffd166" />
  {CANONICAL && <link rel="canonical" href={CANONICAL} />}

  <!-- Open Graph -->
  <meta property="og:type" content="website" />
  <meta property="og:title" content={META_TITLE} />
  <meta property="og:description" content={META_DESC} />
  {CANONICAL && <meta property="og:url" content={CANONICAL} />}
  <meta property="og:image" content={OG_IMAGE} />
  <meta property="og:locale" content="es_AR" />

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={META_TITLE} />
  <meta name="twitter:description" content={META_DESC} />
  <meta name="twitter:image" content={OG_IMAGE} />

  <!-- JSON-LD: WebSite + WebPage -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "WebPage",
    "name": "Feriados por pa√≠s ‚Äî Comparador",
    "description": "Ver feriados nacionales, pr√≥ximo feriado, ranking por continente y top mundial.",
    "inLanguage": "es",
    "url": {CANONICAL ? JSON.stringify(CANONICAL) : "null"},
    "isPartOf": {
      "@type": "WebSite",
      "name": "Feriados ‚Äî Comparador",
      "url": {CANONICAL ? JSON.stringify(new URL('/', Astro.site).toString()) : "null"}
    }
  }
  </script>

  <!-- Tipograf√≠a + Bootstrap (si no los ten√≠as) -->
  <link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;800&display=swap" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
      :root{ --grad: linear-gradient(90deg,#ff6b6b,#ffd166,#4ecdc4,#a78bfa); }
      body{ font-family:"Nunito",system-ui,-apple-system,Segoe UI,Roboto,Arial; }
      .hero{ background: var(--grad); color:#0b1220; }
      .card{ border-radius:16px }
      .progress{ height:10px; border-radius:8px }
      .badge-soft{ background:#f8fafc; color:#64748b; border:1px solid #e2e8f0 }

      /* üéâ Overlay de celebraci√≥n */
      #celebration {
        position: fixed; inset: 0; pointer-events: none; z-index: 9999;
        display: none;
      }
      #celebration.show { display: block; }
      .cele-emoji {
        position: absolute; font-size: clamp(24px, 4vw, 42px); line-height: 1; will-change: transform, opacity;
        animation: celeFloat var(--dur,6s) ease-in forwards;
        filter: drop-shadow(0 2px 2px rgba(0,0,0,.15));
      }
      @keyframes celeFloat {
        0%   { transform: translateY(10vh) scale(.8) rotate(0); opacity:0; }
        10%  { opacity: 1; }
        100% { transform: translateY(-110vh) scale(1.2) rotate(540deg); opacity:0; }
      }
      .cele-banner {
        position: absolute; left:50%; top:14%;
        transform: translateX(-50%);
        background: rgba(255,255,255,.85);
        border: 2px solid rgba(0,0,0,.06);
        border-radius: 999px; padding: 10px 18px; font-weight: 800;
        color:#0b1220; text-shadow: 0 1px 0 #fff;
        box-shadow: 0 10px 30px rgba(0,0,0,.08);
        animation: pop 500ms ease-out;
      }
      @keyframes pop { from{ transform: translateX(-50%) scale(.9); opacity:0 } to{ transform: translateX(-50%) scale(1); opacity:1 } }
      /* Loader global (overlay) */


/* Skeletons por secci√≥n */
.skel {
  display: block; width: 100%; height: 14px; border-radius: 8px;
  background: linear-gradient(90deg,#f2f4f7,#e9eef4,#f2f4f7);
  background-size: 200% 100%; animation: skel 1.1s infinite linear;
}
@keyframes skel { 0% {background-position: 200% 0} 100% {background-position: -200% 0} }
.skel-row { height: 18px; margin: 8px 0; }

    </style>
  </head>
  <body class="bg-light">
    <section class="hero py-4 mb-3">
      <div class="container">
        <h1 class="display-6 fw-bold">üéä TopFeriados</h1>
        <p class="mb-0">Eleg√≠ tu pa√≠s y el a√±o. Te contamos el pr√≥ximo feriado, cu√°ntos faltan y qui√©n manda en el ranking üòâ.</p>
      </div>
    </section>

    <main class="container pb-5">
      <!-- Controles -->
      <div class="card p-3 mb-3">
        <h2 class="h5 mb-3">üéØ Arranquemos</h2>
        <div class="row g-2 align-items-end">
          <div class="col-md-6 col-lg-5">
            <label class="form-label">Pa√≠s</label>
            <select id="country" class="form-select"></select>
          </div>
          <div class="col-md-3 col-lg-2">
            <label class="form-label">A√±o</label>
            <input id="year" type="number" min="2001" max="2100" value={DEFAULT_YEAR} class="form-control" />
          </div>
          <div class="col-md-3 col-lg-3 d-grid">
            <button id="load" class="btn btn-primary">‚ú® Ver feriados</button>
          </div>
        </div>
        <div class="mt-2">
          <span id="apiMode" class="badge badge-soft">üîå Fuente: ‚Äî</span>
        </div>
      </div>

      <!-- KPIs -->
      <div class="row g-3 mb-3">
        <div class="col-lg-6">
          <div class="card p-3 h-100">
            <h2 class="h5 mb-3">üìÖ Pr√≥ximo feriado (¬°a celebrar!)</h2>
            <div class="row text-center">
              <div id="nextKpi" class="row text-center">
              <div class="col-4"><div class="fw-bold fs-5" id="nextName">‚Äî</div><div class="text-muted">Nombre</div></div>
              <div class="col-4"><div class="fw-bold fs-5" id="nextDate">‚Äî</div><div class="text-muted">Fecha</div></div>
              <div class="col-4"><div class="fw-bold fs-5" id="daysLeft">‚Äî</div><div class="text-muted">D√≠as</div></div>
              </div>
            </div>
            <div id="todayBadge" class="badge bg-success-subtle text-success-emphasis mt-2 d-none">üéâ ¬°Es hoy!</div>
          </div>
        </div>
        <div class="col-lg-6">
          <div class="card p-3 h-100">
            <h2 class="h5 mb-3">üìä Resumen ‚Äî <span id="titleCountry">‚Äî</span> <span id="titleYear">{DEFAULT_YEAR}</span></h2>
            <div class="row text-center">
              
              <div id="nextKpi" class="row text-center"></div>
              <div class="col-4"><div class="fw-bold fs-5" id="totalHolidays">0</div><div class="text-muted">Feriados</div></div>
              <div class="col-4"><div class="fw-bold fs-5" id="passedCount">0</div><div class="text-muted">Pasaron</div></div>
              <div class="col-4"><div class="fw-bold fs-5" id="remainingCount">0</div><div class="text-muted">Faltan</div></div>
            </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Tabla -->
      <div class="card p-3 mb-3">
        <h2 class="h5 mb-3">üóÇÔ∏è Lista de feriados</h2>
        <div class="table-responsive">
          <table class="table table-hover align-middle mb-0">
            <thead class="table-light"><tr><th style="width:260px;">Fecha</th><th>Nombre</th></tr></thead>
            <tbody id="tbody"><tr><td colspan="2" class="text-muted">Toc√° ‚ÄúVer feriados‚Äù para empezar üëá</td></tr></tbody>
          </table>
        </div>
      </div>

      <!-- Rankings -->
      <div class="row g-3">
        <div class="col-lg-6">
          <div class="card p-3 h-100">
            <h2 class="h5 mb-3">üåé Ranking por continente (<span id="selfCont">‚Äî</span>)</h2>
            <ol id="rankSelfCont" class="list-group list-unstyled"></ol>
          </div>
        </div>
        <div class="col-lg-6">
          <div class="card p-3 h-100">
            <h2 class="h5 mb-3">üåê Top 10 del mundo (+ tu pa√≠s)</h2>
            <ol id="rankWorld" class="list-group list-unstyled"></ol>
          </div>
        </div>
      </div>


    </main>

    <footer class="border-top border-secondary py-3"> <div class="text-center  border-secondarysmall"> <div>Hecho por
<a href="https://www.blyxsolutions.com.ar/" target="_blank" rel="noopener noreferrer" style="text-decoration:none;"> <span style="color:#2DD4BF;">Blyx</span><span style="color:#FB7185;">Solutions</span> </a> - <a style="color:#FB7185;text-decoration:none" href="https://cafecito.app/blyxsolutions" rel="noopener" target="_blank">
‚òïÔ∏è Invitame un cafecito
</a> </div> </div> </footer>

    <!-- üéâ Overlay de celebraci√≥n -->
    <div id="celebration" aria-hidden="true"></div>

    <script type="module">
      const $ = (s) => document.querySelector(s);
      const els = {
        titleCountry: $("#titleCountry"), titleYear: $("#titleYear"),
        country: $("#country"), year: $("#year"), load: $("#load"),
        tbody: $("#tbody"),
        nextName: $("#nextName"), nextDate: $("#nextDate"), daysLeft: $("#daysLeft"), todayBadge: $("#todayBadge"),
        totalHolidays: $("#totalHolidays"), passedCount: $("#passedCount"), remainingCount: $("#remainingCount"),
        apiMode: $("#apiMode"),
        selfCont: $("#selfCont"), rankSelfCont: $("#rankSelfCont"), rankWorld: $("#rankWorld"),
        celebration: $("#celebration"),
      };

      const SAFE_TZ = "UTC";
      const LOCALE = "{LOCALE}";

      const state = {
        countries: [],
        continents: [],
        selected: { code: "AR", year: "{DEFAULT_YEAR}" },
        celebrateTimer: null,
      };

      function parseISO(d){ return new Date(d+"T00:00:00"); }
      function fmtDate(iso){
        const d = parseISO(iso);
        try { return d.toLocaleDateString("es-AR", { weekday:"long", day:"2-digit", month:"long", year:"numeric", timeZone: SAFE_TZ }); }
        catch { return d.toLocaleDateString(undefined, { weekday:"long", day:"2-digit", month:"long", year:"numeric" }); }
      }
      function todayISO(){ const n=new Date(); return `${n.getUTCFullYear()}-${String(n.getUTCMonth()+1).padStart(2,"0")}-${String(n.getUTCDate()).padStart(2,"0")}`; }
      function daysBetween(aISO,bISO){ const ms=86400000,a=parseISO(aISO),b=parseISO(bISO); return Math.round((b-a)/ms); }
      function codeToName(code){ return state.countries.find(c=>c.code===code)?.name || code; }
      function getContinent(code){ return state.countries.find(c=>c.code===code)?.continent; }
      function getCountriesByContinent(cont){ return state.countries.filter(c=>c.continent===cont).map(c=>c.code); }
      function getAllCodes(){ return state.countries.map(c=>c.code); }

      async function loadMeta(){
        let merged = [], continents = ["Americas","Europe","Asia","Africa","Oceania"];
        try {
          const r = await fetch("/api/continents.json");
          if (r.ok) {
            const data = await r.json();
            merged = data.countries ?? [];
            continents = data.continents ?? continents;
          }
        } catch {}
        if (merged.length < 120) {
          try {
            const rc = await fetch("https://restcountries.com/v3.1/all?fields=cca2,region,name");
            if (rc.ok) {
              const arr = await rc.json();
              const allowed = new Set(["Americas","Europe","Asia","Africa","Oceania"]);
              const seen = new Set(merged.map(c=>c.code));
              for (const it of arr) {
                const code = String(it.cca2 || "").toUpperCase();
                const name = it?.name?.common || code;
                const cont = allowed.has(it.region) ? it.region : undefined;
                if (code && name && cont && !seen.has(code)) { merged.push({ code, name, continent: cont }); seen.add(code); }
              }
            }
          } catch {}
        }
        try {
          const sr = await fetch("/api/countries_supported.json");
          if (sr.ok) {
            const supp = await sr.json();
            const supported = (supp?.codes ?? []).map(c=>String(c).toUpperCase());
            if (supported.length >= 30) {
              const ok = new Set(supported);
              merged = merged.filter(c => ok.has(c.code));
            }
          }
        } catch {}
        if (!merged.length) {
          merged = [
            { code:"AR", name:"Argentina", continent:"Americas" },
            { code:"BR", name:"Brasil", continent:"Americas" },
            { code:"US", name:"Estados Unidos", continent:"Americas" },
            { code:"ES", name:"Espa√±a", continent:"Europe" },
            { code:"FR", name:"Francia", continent:"Europe" },
            { code:"DE", name:"Alemania", continent:"Europe" },
          ];
        }
        merged.sort((a,b)=> a.name.localeCompare(b.name));
        state.countries = merged;
        state.continents = continents;

        const def = "AR";
        els.country.innerHTML = state.countries.map(c => `<option value="${c.code}" ${c.code===def?"selected":""}>${c.name}</option>`).join("");
        els.titleCountry.textContent = codeToName(def);
      }

      function renderTable(items){
        if(!items.length){
          els.tbody.innerHTML = `<tr><td colspan="2" class="text-muted">No encontramos feriados para ese a√±o ü§î</td></tr>`;
          return;
        }
        els.tbody.innerHTML = items.map(h => {
          const tag = h.isTourismExtra ? ' <span class="badge bg-warning-subtle text-warning-emphasis">üß≥ tur√≠stico</span>' : '';
          return `<tr><td>${fmtDate(h.dateISO)}</td><td>${h.name}${tag}</td></tr>`;
        }).join("");
      }

      function computeNext(items){
        const today = todayISO();
        const up = items.find(h => h.dateISO >= today);
        return up ? { holiday: up, daysLeft: Math.max(0, daysBetween(today, up.dateISO)) } : null;
      }

      // üéâ L√≥gica de celebraci√≥n
      function shouldCelebrate(items) {
        const t = todayISO();
        return items.some(h => Math.abs(daysBetween(t, h.dateISO)) <= 2); // ventana ¬±2 d√≠as
      }
      function startCelebration(intense=false) {
        stopCelebration(); // limpiar anterior
        els.celebration.classList.add("show");
        // Banner
        const banner = document.createElement("div");
        banner.className = "cele-banner";
        banner.textContent = intense ? "üéâ ¬°Feriado hoy! ¬°A disfrutar!" : "üéâ Se viene feriado‚Ä¶ ¬°ya falta poco!";
        els.celebration.appendChild(banner);

        // Lluvia de emojis
        const EMOJIS = ["üéâ","üéä","‚ú®","ü•≥","üéà"];
        const total = intense ? 70 : 45;
        for (let i=0;i<total;i++){
          const s = document.createElement("span");
          s.className = "cele-emoji";
          s.textContent = EMOJIS[Math.floor(Math.random()*EMOJIS.length)];
          s.style.left = Math.round(Math.random()*100) + "vw";
          s.style.setProperty("--dur", (4 + Math.random()*5) + "s");
          s.style.animationDelay = (Math.random()*1.5) + "s";
          els.celebration.appendChild(s);
          s.addEventListener("animationend", ()=> s.remove());
        }

        // Confetti (si est√° disponible)
        const burst = () => {
          if (typeof window.confetti === "function") {
            window.confetti({
              particleCount: intense ? 180 : 120,
              spread: intense ? 95 : 70,
              origin: { y: 0.6 }
            });
          }
        };
        burst();
        state.celebrateTimer = setInterval(burst, 1400);
        // Auto-stop
        setTimeout(stopCelebration, intense ? 9000 : 7000);
      }
      function stopCelebration(){
        if (state.celebrateTimer){ clearInterval(state.celebrateTimer); state.celebrateTimer=null; }
        els.celebration.classList.remove("show");
        els.celebration.innerHTML = "";
      }

      function getSelection() {
        const code = (els.country && els.country.value) || state.selected.code || "AR";
        const year = (els.year && els.year.value) || state.selected.year || "{DEFAULT_YEAR}";
        return { code, year };
      }

// ---- Loaders por secci√≥n ----
function tableSkeleton(rows = 8) {
  return `<tr><td colspan="2">
    ${Array.from({length:rows}).map(()=>`<div class="skel skel-row"></div>`).join("")}
  </td></tr>`;
}

function listSkeleton(items = 6) {
  return Array.from({length:items}).map(()=>`
    <li class="list-group-item">
      <div class="skel" style="height:18px;"></div>
      <div class="skel" style="height:10px; width:60%; margin-top:8px;"></div>
    </li>
  `).join("");
}

function kpi3Skeleton() {
  // tres columnas (igual al layout de KPIs)
  return `
    <div class="col-4">
      <div class="skel" style="height:26px;"></div>
      <div class="skel" style="height:12px; margin-top:8px; width:70%;"></div>
    </div>
    <div class="col-4">
      <div class="skel" style="height:26px;"></div>
      <div class="skel" style="height:12px; margin-top:8px; width:70%;"></div>
    </div>
    <div class="col-4">
      <div class="skel" style="height:26px;"></div>
      <div class="skel" style="height:12px; margin-top:8px; width:70%;"></div>
    </div>
  `;
}

function setKpiLoading(on) {
  const nextKpi = document.getElementById("nextKpi");
  const summaryKpi = document.getElementById("summaryKpi");
  if (!nextKpi || !summaryKpi) return;

  if (on) {
    // guardamos contenido original para restaurar
    if (!nextKpi._html) nextKpi._html = nextKpi.innerHTML;
    if (!summaryKpi._html) summaryKpi._html = summaryKpi.innerHTML;
    nextKpi.innerHTML = kpi3Skeleton();
    summaryKpi.innerHTML = kpi3Skeleton();
  } else {
    if (nextKpi._html) nextKpi.innerHTML = nextKpi._html;
    if (summaryKpi._html) summaryKpi.innerHTML = summaryKpi._html;
  }
}

// Spinner del bot√≥n (ya que lo pediste por secci√≥n tambi√©n)
function setButtonLoading(on) {
  if (!els.load) return;
  if (on) {
    els._loadText = els._loadText || els.load.textContent;
    els.load.disabled = true;
    els.load.setAttribute("aria-busy", "true");
    els.load.innerHTML = `
      <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
      Cargando...
    `;
  } else {
    els.load.disabled = false;
    els.load.removeAttribute("aria-busy");
    els.load.textContent = els._loadText || "‚ú® Ver feriados";
  }
}


async function handleLoad(){
  const { code, year } = getSelection();
  state.selected = { code, year };
  els.titleCountry.textContent = codeToName(code);
  els.titleYear.textContent = year;

  // ‚¨áÔ∏è activar loaders
  setButtonLoading(true);   
  // ‚¨áÔ∏è loaders por secci√≥n
  setButtonLoading(true);
  setKpiLoading(true);
  els.tbody.innerHTML = tableSkeleton(8);
  els.rankSelfCont.innerHTML = listSkeleton(6);
  els.rankWorld.innerHTML   = listSkeleton(10);
  els.tbody.innerHTML = tableSkeleton(8);
  els.rankSelfCont.innerHTML = listSkeleton(6);
  els.rankWorld.innerHTML   = listSkeleton(10);

  try {
    // feriados
    const resp = await fetch(`/api/holidays.json?country=${code}&year=${year}&locale=${LOCALE}`);
    const data = await resp.json();

    if (data.mode !== "live") {
      els.apiMode.textContent = "üîå Fuente: Nager.Date (ups)";
      if (data.error) els.apiMode.title = String(data.error);
      els.tbody.innerHTML = `<tr><td colspan="2" class="text-danger">Uy‚Ä¶ no pudimos traer los feriados ahora üòï. Prob√° m√°s tarde.</td></tr>`;
      els.totalHolidays.textContent = "0";
      els.passedCount.textContent = "0";
      els.remainingCount.textContent = "0";
      els.nextName.textContent = "‚Äî"; els.nextDate.textContent = "‚Äî"; els.daysLeft.textContent = "‚Äî";
      els.todayBadge && els.todayBadge.classList.add("d-none");
      // rankings vac√≠os si fall√≥
      els.rankSelfCont.innerHTML = `<li class="list-group-item text-muted">Sin datos por ac√°‚Ä¶ ü§∑‚Äç‚ôÄÔ∏è</li>`;
      els.rankWorld.innerHTML    = `<li class="list-group-item text-muted">Nada por aqu√≠ todav√≠a üëÄ</li>`;
       return;
    }

    els.apiMode.textContent = "üîå Fuente: Nager.Date (en vivo)";
    els.apiMode.removeAttribute("title");

    const { holidays = [], total = 0 } = data;

    // KPIs
    const today = todayISO();
    const passed = holidays.filter(h => h.dateISO < today).length;
    els.totalHolidays.textContent = total;
    els.passedCount.textContent = passed;
    els.remainingCount.textContent = Math.max(0, total - passed);

    // Pr√≥ximo
    const next = computeNext(holidays);
    if(next){
      els.nextName.textContent = next.holiday.name;
      els.nextDate.textContent = fmtDate(next.holiday.dateISO);
      els.daysLeft.textContent = String(next.daysLeft);
      els.todayBadge && els.todayBadge.classList.toggle("d-none", next.daysLeft !== 0);
    } else {
      els.nextName.textContent = "‚Äî"; els.nextDate.textContent = "‚Äî"; els.daysLeft.textContent = "‚Äî";
      els.todayBadge && els.todayBadge.classList.add("d-none");
    }

    // Tabla
    renderTable(holidays);

    // Rankings (mostramos skeleton por cada uno hasta terminar)
    const cont = getContinent(code);
    els.selfCont.textContent = cont || "‚Äî";

    // paralelo pero controlado
    const worldCodes = getAllCodes();
    const pSelf = cont
      ? fetch(`/api/ranking.json?countries=${encodeURIComponent(getCountriesByContinent(cont).join(","))}&year=${year}&locale=${LOCALE}`)
          .then(r=>r.json()).then(j=>renderRanking(els.rankSelfCont, j.results, code))
          .catch(()=> els.rankSelfCont.innerHTML = `<li class="list-group-item text-muted">Sin datos por ac√°‚Ä¶ ü§∑‚Äç‚ôÄÔ∏è</li>`)
      : (els.rankSelfCont.innerHTML = `<li class="list-group-item text-muted">No tenemos continente mapeado üôà</li>`, Promise.resolve());

    const pWorld = fetch(`/api/ranking.json?countries=${encodeURIComponent(worldCodes.join(","))}&year=${year}&locale=${LOCALE}&limit=10&include=${code}`)
      .then(r=>r.json()).then(j=>renderWorldRanking(els.rankWorld, j.results, code, 10))
      .catch(()=> els.rankWorld.innerHTML = `<li class="list-group-item text-muted">Nada por aqu√≠ todav√≠a üëÄ</li>`);

    await Promise.all([pSelf, pWorld]);

  } finally {
    // ‚¨áÔ∏è desactivar loader global siempre
    setKpiLoading(false);
    setButtonLoading(false);     // ‚¨ÖÔ∏è spinner OFF

  }
}


      function renderRanking(listEl, items, highlight){
        if(!items?.length){
          listEl.innerHTML = `<li class="list-group-item text-muted">Sin datos por ac√°‚Ä¶ ü§∑‚Äç‚ôÄÔ∏è</li>`;
          return;
        }
        const max = Math.max(1, ...items.map(i=>i.total));
        listEl.innerHTML = items.map((i, idx) => {
          const pct = Math.round((i.total/max)*100);
          const name = codeToName(i.country);
          const strong = i.country===highlight ? 'class="fw-bold text-primary"' : "";
          return `
            <li class="list-group-item">
              <div class="d-flex justify-content-between align-items-center mb-1">
                <span ${strong}>${idx+1}. ${name}</span>
                <span class="badge bg-primary-subtle text-primary-emphasis">${i.total} üéâ</span>
              </div>
              <div class="progress"><div class="progress-bar" style="width:${pct}%"></div></div>
            </li>`;
        }).join("");
      }

      function renderWorldRanking(listEl, items, highlightCode, limit = 10){
        if(!items?.length){
          listEl.innerHTML = `<li class="list-group-item text-muted">Nada por aqu√≠ todav√≠a üëÄ</li>`;
          return;
        }
        let view = items.slice();
        const max = Math.max(1, ...view.map(i=>i.total));
        listEl.innerHTML = view.map((i, idx) => {
          const pct = Math.round((i.total / max) * 100);
          const name = codeToName(i.country);
          const strongStart = i.country === highlightCode ? '<span class="fw-bold text-primary">' : '<span>';
          return `
            <li class="list-group-item">
              <div class="d-flex justify-content-between align-items-center mb-1">
                ${strongStart}${idx + 1}. ${name}</span>
                <span class="badge bg-primary-subtle text-primary-emphasis">${i.total} üéâ</span>
              </div>
              <div class="progress"><div class="progress-bar" style="width:${pct}%"></div></div>
            </li>
          `;
        }).join("");
      }

      // eventos
      els.load.addEventListener("click", handleLoad);

      // boot
      await loadMeta();
      await handleLoad();
    </script>

    <!-- üéâ confetti (opcional, se usa si est√°) -->
    <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.3/dist/confetti.browser.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
